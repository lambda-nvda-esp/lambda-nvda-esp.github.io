<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LAMBDA con NVDA en español</title><link>https://lambda-nvda-esp.github.io/</link><description>sitio sobre la organización lambda-nvda-esp y el uso de LAMBDA con NVDA en español</description><atom:link type="application/rss+xml" rel="self" href="https://lambda-nvda-esp.github.io/rss.xml"></atom:link><language>es</language><copyright>Contents © 2017 &lt;a href="mailto:lambda-nvda+owners@googlegroups.com"&gt;Organización de GitHub lambda-nvda-esp&lt;/a&gt; </copyright><lastBuildDate>Thu, 25 May 2017 09:02:44 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Proceso de construcción de una tabla braille para el complemento</title><link>https://lambda-nvda-esp.github.io/a/proceso-de-construccion-de-una-tabla-braille-para-el-complemento/</link><dc:creator>Iván Novegil</dc:creator><description>&lt;div&gt;&lt;p&gt;Nota: Este post ha sido construido a partir de la información proporcionada por Alberto Zanella y nuestra experiencia propia construyendo esta tabla.&lt;/p&gt;
&lt;p&gt;Tenía en mente hacer algo como este post dese hace unos días, en inglés o español. Dado que la intención de este complemento es que se expanda a los más idiomas posibles, hago este manual para que cada uno pueda hacer la tabla en el suyo a partir del .jbt de los scripts de Jaws. Como el sitio es en español, no quedará más remedio que hacerla en ese idioma, google Translate is your friend.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Localizamos la tabla LambdaX.jbt en Inicio&amp;gt;Jaws X.Y&amp;gt;Explorar archivos de Jaws&amp;gt;Explorar archivos de programa o en C:\Archivos de programa\Freedom Scientific\Jaws\X.Y, donde X es la versión mayor (16, 17, 18, etc.) e Y la menor (normalmente 0, pero puede variar, sobre todo para versiones anteriores a Jaws8). En esa tabla encontraremos una lista de signos como la que sigue:&lt;/p&gt;
&lt;p&gt;\1 123&lt;/p&gt;
&lt;p&gt;\2 456&lt;/p&gt;
&lt;p&gt;\3 567
2. Tenemos que convertir los números a la izquierda de la tabla a hexadecimal, que es lo que usa Liblouis, que es el motor braille de NVDA. Para ello podemos usar el `&lt;a href="https://lambda-nvda-esp.github.io/linked_files/dec2hex.py"&gt;script dec2hex por José Manuel Delicado&lt;/a&gt;. Podemos ejecutar en Python:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dec2hex&lt;/span&gt;

&lt;span class="n"&gt;dec2hex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;procesar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"LambdaX.jbt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Esto devolverá un txt en el mismo sitio donde se ejecutó el código llamado LambdaX.txt con el mismo formato pero con números hexadecimales en lugar de decimales a la izqueirda. En ambas, lo que figura a la derecha son los patrones de puntos. En las tablas de Liblouis encontraremos un formato algo diferente: categoría símbolo/representación-hexadecimal(\X0000, por ejemplo \X001a, después de la X van cuatro caracteres, si no se llega a ese número rellenar con ceros a la izquierda, por ejemplo para el carácter anterior 1a se ponen dos ceros de forma que \X001a) patrón-puntos.
3. Una vez se han convertido, queda el trabajo más arduo. Comparar los valores de puntos de la tabla de NVDA con los de Jaws. Para eso necesitamos descargar las tablas de Liblouis. Con Git (si no tienes Git, recomendable descargarlo), ejecutar desde la consola:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/liblouis/liblouis
&lt;/pre&gt;


&lt;p&gt;Obtendremos una carpeta llamada Liblouis. Dentro de ella iremos a tables y buscaremos la nuestra, normalmente algo así como X_G0.utb (las G1 son de 6 puntos y no nos interesan) o X-8.utb/X-8dots.utb. Para incluirla en el addon y testearla, necesitamos bajarlo, también usando Git, ejecutando:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/nvdaaddons/lambda
&lt;/pre&gt;


&lt;p&gt;Tendremos una carpeta "lambda". Tendremos que entrar y navegad a ddon&amp;gt;appModules&amp;gt;LAMBDA&amp;gt;brailleTables. Pegamos la tabla que copiamos desde la carpeta tables de Liblouis y la renombramos al estilo de los archivos que ya están en esa carpeta (lambda-X.utb).
4. Primero deberíamos comprobar los include de la tabla, haciendo una búsqueda con la función buscar del editor con que la abramos (se recomienda Notepad++). Si el include hace referencia a un archivo que no está en la carpeta brailleTables que tendremos abierta en otra ventana debemos buscar ese archivo en Liblouis (por lo general en la carpeta tables) y pegarlo, sin cambiar el nombre, para que la tabla pueda utilizar las dependencias que necesite. En el caso de nuestra tabla, la española, no fue necesario ya que todas las dependencias de la española las requería también la italiana que ya estaba hecha.
5. Después, se empiezan a verificar todos los símbolos (obviando ciertas categorías, como letras o números, aunque si las cotejamos no debería llevarnos más de 3 horas toda la tabla). Recomiendo ir marcando en el txt que generó el script en el paso 2 (con * o lo que nos sea más cómodo) los símbolos que ya hayamos verificado, luego nos será útil a la hora de añadir aquellos símbolos que falten. Debemos modificar los puntos de aquellos símbolos que estén mal primero, y posteriormente añadir todos los que no figuran en la tabla. En este punto yo personalmente al hacer la tabla no fui demasiado meticuloso, asigné a todos la categoría math y no puse descripción porque los que hicieron la tabla de Jaws se ve que tampoco tenían demasiado tiempo como para ponerse a mirar qué era cada símbolo y ponerlo como comentario. Para añadir símbolos, por ejemplo, si en el txt tenemos b1 345678 podemos poner: math \X00b1 345678.
6. Si has hecho todo esto con éxito, felicidades, lo esencial está completado. Necesitas probar la tabla con NVDA o con lou_debug, lo que esté a tu alcance. Desconozco si hay versión de Liblouis para instalar en windows, pero para Linux la hay y me fue muy útil a la hora de depurar errores en la tabla. Si tenéis por ahí un servidor o máquina virtual solo es cosa de bajarse Liblouis o el código (si es el código compilarlo con make &amp;amp;&amp;amp; make install) y pasaros a la MV o servidor el utb. Después de eso:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;lou_debug LambdaX.utb
&lt;/pre&gt;


&lt;p&gt;Entonces debería decir qué errores ha encontrado y la línea. Para ir a una línea X en el Notepad++ podemos usar Ir a la línea... en el menú buscar (ctrl+G). Si no tienes lou_debug o alguna herramienta de depuración de Liblouis a tu alcance, te tocará hacerlo de la forma chapuza, a mano. A mí me dio demasiada pereza ponerme a verificar qué había hecho mal (además de que seguramente algunos errores no sería capaz de encontrarlos) y busqué, en su lugar, lo de la depuración en Liblouis que cuento al principio de este paso. &lt;!-- ToDo: Mirar si hay debugging para windows y especificarlo.--&gt;
7. Si has depurado todos los errores, enhorabuena, tu tabla debería funcionar con el complemento. compila el complemento si tienes las herramientas necesarias (solo tecla scons en una ventana del símb del sistema u otra consola debidamente configurada), o añade el utb en %appdata%\nvda\addons\lambda\appModules\LAMBDA\brailleTables. Reinicia NVDA.
8. Una vez que no haya ningún error ponte en contacto con el autor o envía una pull request al repo nvdaaddons/lambda de GitHub con la tabla  para que la incluya (cómo enviar pull requests en GitHub está fuera del propósito de este documento). Si la acepta, no olvides ponerte en contacto con el traductor del idioma (o de los idiomas) a los que corresponde tu tabla para avisarle de que la haga predeterminada para todos los que instalen el complemento en ese/esos idioma/s. Si no sabes el traductor de tu idioma busca y subscríbete a la lista de traducciones de NVDA; allí podrás preguntar. Tambien puedes hacer de detective y mirar quién hace commits en tu/s idioma/s en el repo screenReaderTranslations de assembla.com.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Y esto es todo, no tiene mucho más. Gracias por tragaros el tocho. Ah, y suerte.
&lt;strong&gt;&lt;em&gt;La tabla españoala fue construída ena colaboración entre José Manuel Delicado, Salva Doménech y yo, con el autor. Agradecimiento especial a José Enrique Fernández del Campo por sus detallados reportes de errores que intentamos corregir antes de la publicación de la tabla.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>https://lambda-nvda-esp.github.io/a/proceso-de-construccion-de-una-tabla-braille-para-el-complemento/</guid><pubDate>Thu, 25 May 2017 07:12:09 GMT</pubDate></item><item><title>Podcast y reseña sobre LAMBDA con NVDA en el sitio web de la comunidad hispanohablante</title><link>https://lambda-nvda-esp.github.io/a/podcast-y-resena-sobre-lambda-con-nvda-en-el-sitio-web-de-la-comunidad-hispanohablante/</link><dc:creator>Iván Novegil (a partir de lo publicado por Salva Doménech Miguel con la colaboración de Noelia R.M.)</dc:creator><description>&lt;div&gt;&lt;p&gt;Es cierto que desde hace bastante tiempo, unos 4 años calculando a ojo, NVDA soportaba, mediante un plugin chapuza, la lectura del editor Lambda. También es cierto que ONCE intentó, mediante este plugin,, que debía ejecutarse en un portable y recomendaban ejecutar en una máquina virtual de Windows XP en VirtualBox (que yo llegué a tener cuando Windows 8 empezó a expandirse), potenciarlo; pero no es menos cierto que como ya comenté, el plugin (creo que de autor desconocido) era chapucero. Era inestable, el soporte no era completo y además debía utilizarse una versión portable de NVDA con ese plugin instalado a mano y a ser posible nada más a riesgo de que interfiriera con otros complementos. No sé si algún asiduo usuario de Lambda pudo probar esto, la verdad es que yo no llegué a usarlo, ni en dos ocasiones, pero casi juraría que no ofrecía soporte braille en ningún idioma&lt;/p&gt;
&lt;p&gt;Bien, supongo que encontrándose en la situación que comenté arriba, y sin ganas de comprar un JAWS o llamémosle x a la razón por la que lo hizo, en septiembre el autor de este complemento, Alberto Zanella, decidió solicitar una revisión. No recuerdo ahora si la pasó o no, creo que se le comentaron un par de cosas a mejorar, pero desapareció de la faz de la tierra.&lt;/p&gt;
&lt;p&gt;Algunos, como Iván Novegil, José Enrique Fernández del Campo, o sin ir más lejos yo mismo; manifestamos la utilidad que veíamos a esto. Durante mucho tiempo la versión compartida por Alberto era la que había, con traducciones a castellano creo recordar gracias a la ayuda de miembros de la comunidad y con tablas braille en italiano. No se volvió a saber casi de él y no se llegó a saber tampoco bien del todo como solucionar el tema de las tablas braille.&lt;/p&gt;
&lt;p&gt;A principios de mayo, el autor volvió a aparecer, respondiendo a algunas isues de Github de Iván. La cosa volvió a ponerse en marcha con la aparición también de José manuel Delicado, de manera que la historia termina con un trabajo brutal en algo así como 3 semanas. Un trabajo brutal en el que se han mejorado incidencias como la mejora de algunas pronunciaciones, la dición de nuevos elementos a pronunciar (las coordenadas de las celdillas de una matriz, por ejemplo), y la mejora más evidente: el soporte braille completo con una tabla en castellano. Y en este sentido sí creo que es muy importante agradecer infinitamente a Iván Novegil, a José Manuel Delicado, a José Enrique Fernández del Campo y obviamente al autor, por este trabajo tan excelente y en tiempo récord para obtener un complemento casi publicado al 100% y con muy pocos fallos que solucionar.&lt;/p&gt;
&lt;p&gt;Creo que toda la comunidad y en general todos los usuarios y usuarias del lector y sobre todo del editor matemático lambda solo podemos estar agradecidos, muy, agradecidos, por este maravilloso trabajo. Quedan algunos fallos por pulir (como la desubicación del braille al navegar por una línea con sensores o algunos signos que no semuestran) pero algunos de estos son del propio Lambda y las nuevas versiones de Windows.&lt;/p&gt;
&lt;p&gt;En definitiva, creo que podemos estar contentos si decimos que el soporte es similar al que ofrece JAWS con sus correspondientes scripts como así podéis comprobar en el podcast enlazado en esta entrada.&lt;/p&gt;
&lt;p&gt;Es muy probable que en el futuro inmediato, las próximas versiones del addon ya no presenten algunos errores de los que doy cuenta en él.&lt;/p&gt;
&lt;h4&gt;Podcast sobre Lambda&lt;/h4&gt;
&lt;p&gt;&lt;audio controls&gt;
   &lt;source src="https://s.juventudelatina.com/juvenube/index.php/s/KtyR7zeybfI7uRL/download" type="audio/mpeg"&gt;
Tu navegador no admite la reproducción de este podcast.
&lt;/source&gt;&lt;/audio&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://s.juventudelatina.com/juvenube/index.php/s/KtyR7zeybfI7uRL/download"&gt;Descargar podcast&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Referencias&lt;/h4&gt;
&lt;h5&gt;Contenido matemático del podcast&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nvdaes.github.io/linkedFiles/salvaPrueba.lambda"&gt;Descargar fichero Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nvdaes.github.io/linkedFiles/salvaPrueba.html"&gt;Ver en formato HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nota: Para explorar el fichero anterior con Firefox o Internet Explorer, puedes instalar &lt;a href="http://www.dessci.com/en/products/mathplayer/"&gt;MathPlayer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Para más información, consulta la sección "Leyendo Contenido Matemático" en la guía de NVDA.&lt;/p&gt;
&lt;h5&gt;Lambda y su complemento&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://addons.nvda-project.org/addons/lambda.es.html"&gt;Página del complemento de NVDA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lambdaproject.org/home"&gt;Proyecto Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ftp://ftp.once.es/pub/utt/tiflosoftware/Miscelanea/LambdaSetup140.zip"&gt;Descargar Lambda&lt;/a&gt; (archivo del CIDAT)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;copiado del original en [https://nvdaes.github.io/Lambda-con-NVDA/]&lt;/p&gt;&lt;/div&gt;</description><guid>https://lambda-nvda-esp.github.io/a/podcast-y-resena-sobre-lambda-con-nvda-en-el-sitio-web-de-la-comunidad-hispanohablante/</guid><pubDate>Wed, 24 May 2017 16:17:04 GMT</pubDate></item><item><title>bienvenidos a la web de LAMBDA-NVDA-esp</title><link>https://lambda-nvda-esp.github.io/a/bienvenidos-a-la-web-de-lambda-nvda-esp/</link><dc:creator>Iván Novegil</dc:creator><description>&lt;p&gt;Pues eso, bienvenidos. Podéis obtener más información sobre nosotros &lt;a href="https://lambda-nvda-esp.github.io/p/about"&gt;aquí&lt;/a&gt;&lt;/p&gt;</description><guid>https://lambda-nvda-esp.github.io/a/bienvenidos-a-la-web-de-lambda-nvda-esp/</guid><pubDate>Wed, 24 May 2017 15:43:03 GMT</pubDate></item></channel></rss>